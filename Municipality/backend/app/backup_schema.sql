CREATE DATABASE IF NOT EXISTS AppMunicipality
  DEFAULT CHARACTER SET utf8mb4
  DEFAULT COLLATE utf8mb4_0900_ai_ci;
USE AppMunicipality;

SET sql_mode = 'STRICT_ALL_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE TABLE ROLES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  NAME VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB;

CREATE TABLE MUNICIPALITIES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  NAME VARCHAR(150) NOT NULL,
  REGION VARCHAR(100),
  COUNTRY_CODE CHAR(2) NOT NULL,
  POPULATION BIGINT ,
  META JSON,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  INDEX (COUNTRY_CODE),
  INDEX (NAME)
) ENGINE=InnoDB;

CREATE TABLE USERS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  NAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(100) NOT NULL UNIQUE,
  PASSWORD VARCHAR(255) NOT NULL,
  ROLE_ID INT  NOT NULL,
  HOME_MUNI_ID INT  NULL,
  CONFIG_PROFILE JSON,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  DELETED_AT TIMESTAMP NULL,
  CONSTRAINT FK_Users_Roles FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID),
  CONSTRAINT FK_Users_Municipalities FOREIGN KEY (HOME_MUNI_ID) REFERENCES MUNICIPALITIES(ID) ON DELETE SET NULL
) ENGINE=InnoDB;

CREATE TABLE PASSWORD_RESET_TOKENS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  TOKEN VARCHAR(255) NOT NULL UNIQUE,
  USER_ID INT  NOT NULL,
  EXPIRY_DATE TIMESTAMP NOT NULL,
  USED_AT TIMESTAMP NULL,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_Password_reset_tokens_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  INDEX (USER_ID),
  INDEX (EXPIRY_DATE)
) ENGINE=InnoDB;

CREATE TABLE ACTIVITIES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  TITLE VARCHAR(150) NOT NULL,
  DESCRIPTION TEXT,
  DIFFICULTY TINYINT  CHECK (DIFFICULTY BETWEEN 1 AND 5),
  MUNI_ID INT  NOT NULL,
  IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
  META JSON,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_Activities_Muni FOREIGN KEY (MUNI_ID) REFERENCES MUNICIPALITIES(ID) ON DELETE CASCADE,
  INDEX (MUNI_ID),
  INDEX (IS_ACTIVE)
) ENGINE=InnoDB;

CREATE TABLE CHALLENGES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  ACTIVITY_ID INT  NOT NULL,
  QR_SECRET VARCHAR(255) NOT NULL,
  EXPIRES_AT TIMESTAMP NULL,
  IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_Challenges_Activity FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITIES(ID) ON DELETE CASCADE,
  INDEX (ACTIVITY_ID),
  INDEX (EXPIRES_AT),
  INDEX (IS_ACTIVE)
) ENGINE=InnoDB;

CREATE TABLE CHALLENGES_ATTEMPTS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  CHALLENGE_ID INT  NOT NULL,
  USER_ID INT  NOT NULL,
  SCANNED_HASH VARCHAR(255) NOT NULL,
  STATUS ENUM('pending','validated','rejected') NOT NULL DEFAULT 'pending',
  ATTEMPTED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_Attempts_Challenge FOREIGN KEY (CHALLENGE_ID) REFERENCES CHALLENGES(ID) ON DELETE CASCADE,
  CONSTRAINT FK_Attempts_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  UNIQUE KEY UQ_Attempt_User_Challenge (CHALLENGE_ID, USER_ID),
  INDEX (STATUS),
  INDEX (ATTEMPTED_AT)
) ENGINE=InnoDB;

CREATE TABLE PLANS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  NAME VARCHAR(100) NOT NULL UNIQUE,
  PRICE_CENTS BIGINT NOT NULL DEFAULT 0,
  CURRENCY VARCHAR(10) NOT NULL DEFAULT 'COP',
  INTERVAL_UNIT ENUM('month','year') NOT NULL DEFAULT 'month',
  FEATURES JSON,
  IS_ACTIVE TINYINT(1) NOT NULL DEFAULT 1,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE SUBSCRIPTIONS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  USER_ID INT  NOT NULL,
  PLAN_ID INT  NOT NULL,
  STATUS ENUM('trialing','active','past_due','canceled','expired') NOT NULL,
  START_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  END_AT TIMESTAMP NULL,
  TRIAL_END_AT TIMESTAMP NULL,
  RENEWS_AT TIMESTAMP NULL,
  AUTO_RENEW TINYINT(1) NOT NULL DEFAULT 1,
  EXTERNAL_PROVIDER_ID VARCHAR(100),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_Sub_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_Sub_Plan FOREIGN KEY (PLAN_ID) REFERENCES PLANS(ID) ON DELETE RESTRICT,
  INDEX (USER_ID),
  INDEX (PLAN_ID),
  INDEX (STATUS),
  INDEX (RENEWS_AT)
) ENGINE=InnoDB;

CREATE TABLE PAYMENTS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  USER_ID INT  NOT NULL,
  SUBSCRIPTION_ID INT  NULL,
  AMOUNT_CENTS BIGINT NOT NULL,
  CURRENCY VARCHAR(10) NOT NULL DEFAULT 'COP',
  STATUS ENUM('pending','succeeded','failed','refunded','canceled') NOT NULL,
  PROVIDER VARCHAR(50) NOT NULL,
  PROVIDER_PAYMENT_ID VARCHAR(100),
  RECEIPT_URL VARCHAR(500),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_Pay_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_Pay_Sub FOREIGN KEY (SUBSCRIPTION_ID) REFERENCES SUBSCRIPTIONS(ID) ON DELETE SET NULL,
  INDEX (USER_ID),
  INDEX (SUBSCRIPTION_ID),
  INDEX (STATUS),
  INDEX (CREATED_AT)
) ENGINE=InnoDB;

CREATE TABLE INVOICES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  USER_ID INT  NOT NULL,
  SUBSCRIPTION_ID INT  NULL,
  PAYMENT_ID INT  NULL,
  PERIOD_START DATE NOT NULL,
  PERIOD_END DATE NOT NULL,
  SUBTOTAL_CENTS BIGINT NOT NULL,
  TAX_CENTS BIGINT NOT NULL DEFAULT 0,
  TOTAL_CENTS BIGINT NOT NULL,
  CURRENCY VARCHAR(10) NOT NULL DEFAULT 'COP',
  ISSUED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  META JSON,
  CONSTRAINT FK_Inv_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_Inv_Sub FOREIGN KEY (SUBSCRIPTION_ID) REFERENCES SUBSCRIPTIONS(ID) ON DELETE SET NULL,
  CONSTRAINT FK_Inv_Pay FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS(ID) ON DELETE SET NULL,
  INDEX (USER_ID),
  INDEX (SUBSCRIPTION_ID),
  INDEX (PAYMENT_ID),
  INDEX (ISSUED_AT)
) ENGINE=InnoDB;

CREATE TABLE MUNICIPALITY_RECOMMENDATIONS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  USER_ID INT  NOT NULL,
  MUNICIPALITY_ID INT  NOT NULL,
  REASON VARCHAR(500),
  ALGO_VERSION VARCHAR(50),
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_Rec_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FK_Rec_Muni FOREIGN KEY (MUNICIPALITY_ID) REFERENCES MUNICIPALITIES(ID) ON DELETE CASCADE,
  UNIQUE KEY UQ_User_Muni (USER_ID, MUNICIPALITY_ID),
  INDEX (MUNICIPALITY_ID)
) ENGINE=InnoDB;

CREATE TABLE ACCOUNT_DELETIONS (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  USER_ID INT  NOT NULL,
  REQUESTED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PROCESSED_AT TIMESTAMP NULL,
  MODE ENUM('erase','anonymize') NOT NULL DEFAULT 'erase',
  CONSTRAINT FK_AccDel_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  INDEX (USER_ID),
  INDEX (REQUESTED_AT)
) ENGINE=InnoDB;

CREATE TABLE USER_ROLE_CHANGES (
  ID INT  PRIMARY KEY AUTO_INCREMENT,
  ADMIN_ID INT  NULL,
  USER_ID INT  NOT NULL,
  OLD_ROLES JSON,
  NEW_ROLES JSON,
  CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FK_RoleCh_Admin FOREIGN KEY (ADMIN_ID) REFERENCES USERS(ID) ON DELETE SET NULL,
  CONSTRAINT FK_RoleCh_User FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  INDEX (USER_ID),
  INDEX (ADMIN_ID),
  INDEX (CREATED_AT)
) ENGINE=InnoDB;
